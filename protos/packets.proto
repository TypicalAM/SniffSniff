syntax = "proto3";

service Greeter {
  rpc GetAccessPoint(NetworkName) returns (APInfo) {}
  rpc GetAllAccessPoints(Empty) returns (NetworkList) {}
  rpc ProvidePassword(DecryptRequest) returns (DecryptResponse) {}
  rpc GetDecryptedPackets(NetworkName) returns (stream Packet) {}
  rpc IgnoreNetwork(NetworkName) returns (Empty) {}
  rpc GetIgnoredNetworks(Empty) returns (NetworkList) {}
  rpc DeauthNetwork(NetworkName) returns (Empty) {}
}

message NetworkName { string ssid = 1; }

message Packet {
  User from = 1;
  User to = 2;
  string protocol = 3; // For now TCP/UDP
  bytes data = 4;
}

message Empty {}

message NetworkList { repeated string names = 1; }

message DecryptRequest {
  string ssid = 1;
  string passwd = 2;
}

enum DecryptState {
  SUCCESS = 0;
  WRONG_OR_NO_DATA = 1; // We need the 4-way handshake to verify a psk
  ALREADY_DECRYPTED = 2;
  WRONG_NETWORK_NAME = 3;
}

message DecryptResponse { DecryptState state = 1; }

message APInfo {
  string bssid = 1;
  string name = 2;
  int64 channel = 3;
  repeated ClientInfo clients = 4;
}

message ClientInfo {
  string addr = 1;
  bool is_decrypted = 2;
  int64 handshake_num = 3;
  bool can_decrypt = 4;
}

message User {
  string MACAddress = 1;
  string IPv4Address = 2;
  int64 port = 3;
}
