# syntax=docker/dockerfile:1

FROM phusion/baseimage:jammy-1.0.4

# We take the target platform and build it conditionally
ARG TARGETPLATFORM

# Prepare deps
RUN apt-get update \
	&& apt-get install -y --no-install-recommends build-essential cmake ninja-build curl git libpcap-dev libssl-dev \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

WORKDIR /app/deps

# Download and install grpc
RUN git clone --recurse-submodules -b v1.62.1 --depth 1 --shallow-submodules https://github.com/grpc/grpc /opt/grpc \
	&& mkdir /opt/grpc/cmake/build \
	&& cmake -B /opt/grpc/cmake/build -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/app/deps /opt/grpc \
	&& make -C /opt/grpc/cmake/build -j 4 \
	&& make -C /opt/grpc/cmake/build install \
	&& rm -rf /opt/grpc

# Download and install libtins
RUN git clone --recurse-submodules -b v4.5 --depth 1 --shallow-submodules https://github.com/mfontanini/libtins /opt/libtins \
	&& mkdir /opt/libtins/build \
	&& cmake -B /opt/libtins/build -DLIBTINS_ENABLE_CXX11=1 -DLIBTINS_ENABLE_ACK_TRACKER=0 -DCMAKE_INSTALL_PREFIX=/app/deps /opt/libtins \
	&& make -C /opt/libtins/build -j 4 \
	&& make -C /opt/libtins/build install \
	&& rm -rf /opt/libtins

# Download the envoy proxy
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ] ; then \
 	curl -L https://github.com/envoyproxy/envoy/releases/download/v1.30.1/envoy-1.30.1-linux-aarch_64 -o /app/deps/bin/envoy; \
	else \
 	curl -L https://github.com/envoyproxy/envoy/releases/download/v1.30.1/envoy-1.30.1-linux-x86_64 -o /app/deps/bin/envoy; \
	fi;
RUN chmod +x /app/deps/bin/envoy
